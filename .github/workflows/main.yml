# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

# jobs:
  # # This workflow contains a single job called "build"
  # build:
    # # The type of runner that the job will run on
    # runs-on: ubuntu-latest

    # # Steps represent a sequence of tasks that will be executed as part of the job
    # steps:
      # # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # - uses: actions/checkout@v2

      # - name: set up JDK 1.8
        # uses: actions/setup-java@v1
        # with:
         # java-version: 1.8

      # - name: Build debug APK
        # run: bash ./gradlew assembleDebug --stacktrace
      # # - name: Upload APK
        # # uses: actions/upload-artifact@v1
        # # with:
          # # name: app
          # # path: app/build/outputs/apk/debug/app-debug.apk
          # # retention-days: 1
      # # - name: build release
        # # run: bash ./gradlew assembleRelease
        
      # - name: upload artifact to App Center
        # uses: wzieba/AppCenter-Github-Action@v1
        # with:
         # appName: 775210/GitHubTest
         # token: ${{secrets.APP_CENTER_TOKEN}}
         # group: Collaborators
         # file: app/build/outputs/apk/debug/app-debug.apk
         # notifyTesters: false
         # debug: false
         
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonarqube --info